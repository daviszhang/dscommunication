package cityu.cs.ds;

import java.io.*;

import java.net.*;
import java.rmi.Naming;
import java.rmi.RMISecurityManager;
import java.rmi.RemoteException;


public class DsClient {
  
  
  public static void rmiConnection(int a,int b)
  {
  	// set the security manager for the client
  	System.setSecurityManager(new RMISecurityManager());
  	//get the remote object from the registry
  	try
  	{
  		String url = "//localhost/SAMPLE-SERVER";
  		DsServerImpl remoteObject = (DsServerImpl)Naming.lookup(url);
  		
  		System.out.println("Got remote object");
  		System.out.println(" RMI Invoke = " + remoteObject.sum(a,b) );
  	}
  	catch (RemoteException exc) {
  		System.out.println("Error in lookup: " + exc.toString()); }
  	catch (java.net.MalformedURLException exc) {
  		System.out.println("Malformed URL: " + exc.toString()); }
  	catch (java.rmi.NotBoundException exc) {
  		System.out.println("NotBound: " + exc.toString());
  	}		
  }
  public static void main(String args[]) {
  		
  	try
  	{
  		//create connection
  		Socket socket=new Socket("127.0.0.1",4700);
  		//由系统标准输入设备构造BufferedReader对象
  	    BufferedReader sin=new BufferedReader(new InputStreamReader(System.in));
  	    PrintWriter os=new PrintWriter(socket.getOutputStream());
  	    //由Socket对象得到输出流，并构造PrintWriter对象
  	    BufferedReader is=new BufferedReader(new InputStreamReader(socket.getInputStream()));
  	    //由Socket对象得到输入流，并构造相应的BufferedReader对象
  	    String readline;
  		readline=sin.readLine(); //从系统标准输入读入一字符串
  	    while(!readline.equals("E"))                        //若从标准输入读入的字符串为 "bye"则停止循环
  	    {
  		  
  		  os.println(readline);			                     //将从系统标准输入读入的字符串输出到Server
  		  os.flush();			                             //刷新输出流，使Server马上收到该字符串
  		  System.out.println("Client:"+readline);			 //在系统标准输出上打印读入的字符串
  		 
  		  rmiConnection(1,2);                                //call rmi
  		  System.out.println("Server:"+is.readLine());       //从Server读入一字符串，并打印到标准输出上
  		  readline=sin.readLine();                           //从系统标准输入读入一字符串
  	   } //继续循环
  	   os.close(); //关闭Socket输出流
  	  socket.close(); //关闭Socket
  	  }
  	 catch(Exception e) 
  	 {
  	 System.out.println("Error"+e);//出错，则打印出错信息
  	 } 
  }

}
